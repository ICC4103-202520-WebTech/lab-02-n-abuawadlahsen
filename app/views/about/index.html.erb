<div class="container-fluid">
  <!-- Header Section with Profile - Using Ruby ERB -->
  <div class="row bg-primary text-white py-5 mb-4">
    <div class="col-12 text-center">
      <div class="container">
        <%= image_tag "photo.jpg", alt: @name, class: "rounded-circle mb-3 border border-3 border-light", style: "width: 180px; height: 180px; object-fit: cover;" %>
        <h1 class="display-4 fw-light mb-2"><%= @name %></h1>
        <p class="lead"><%= @personal_info[:major] %></p>
        <p class="text-info"><%= @greeting %></p>
        <small class="text-light">Powered by Ruby on Rails ‚Ä¢ Current Year: <%= @current_year %></small>
      </div>
    </div>
  </div>

  <div class="container">
    <!-- Personal Information Section -->
    <div class="row mb-4">
      <div class="col-12">
        <div class="card shadow-sm">
          <div class="card-header bg-danger text-white">
            <h2 class="h4 mb-0">Personal Information</h2>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-md-4">
                <p><strong class="text-danger">Major:</strong> <%= @personal_info[:major] %></p>
              </div>
              <div class="col-md-4">
                <p><strong class="text-danger">Year of Entry:</strong> <%= @personal_info[:entry_year] %> (<%= @years_since_entry %> years ago)</p>
              </div>
              <div class="col-md-4">
                <p><strong class="text-danger">GitHub:</strong> 
                  <a href="<%= @personal_info[:github] %>" target="_blank" class="btn btn-outline-success btn-sm">
                    github.com/n-abuawadlahsen
                  </a>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Personal Summary Section -->
    <div class="row mb-4">
      <div class="col-12">
        <div class="card shadow-sm">
          <div class="card-header bg-success text-white">
            <h2 class="h4 mb-0">Personal Summary</h2>
          </div>
          <div class="card-body">
            <p class="lead">I am a Computer Science major who loves creating solutions and building software through coding. I believe the possibilities in software development are endless. Three years ago, I transferred from medical school after realizing I was more passionate about coding. Nevertheless, my goal is to create solutions that can be applied in the practice of medicine. In my free time, I work as a software developer in an e-commerce company, continue learning more about software development, and compete in powerlifting.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Links Section -->
    <div class="row mb-4">
      <div class="col-12">
        <div class="card shadow-sm">
          <div class="card-header bg-dark text-white">
            <h2 class="h4 mb-0">Links</h2>
          </div>
          <div class="card-body">
            <div class="d-flex flex-wrap gap-2">
              <a href="https://www.uandes.cl" target="_blank" class="btn btn-outline-primary">Universidad de los Andes</a>
              <a href="https://github.com/n-abuawadlahsen" target="_blank" class="btn btn-outline-success">GitHub</a>
              <a href="https://colegioarabe.cl/" target="_blank" class="btn btn-outline-info">Colegio √Årabe</a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Skills Section -->
    <div class="row mb-4">
      <div class="col-12">
        <div class="card shadow-sm">
          <div class="card-header bg-danger text-white">
            <h2 class="h4 mb-0">Skills and Expertise Level</h2>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-striped table-hover" id="skillsTable">
                <thead class="table-dark">
                  <tr>
                    <th>Skill</th>
                    <th>Level</th>
                    <th>Experience</th>
                  </tr>
                </thead>
                <tbody>
                  <%# Ruby ERB loop to iterate through skills array %>
                  <% @skills.each do |skill| %>
                    <tr>
                      <td><%= skill[:name] %></td>
                      <td>
                        <span class="badge bg-<%= skill[:badge_class] %> <%= 'text-dark' if skill[:badge_class] == 'warning' %>">
                          <%= skill[:level] %>
                        </span>
                      </td>
                      <td><%= skill[:experience] %></td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Interactive Add Skill Section -->
    <div class="row mb-5">
      <div class="col-12">
        <div class="card shadow-sm">
          <div class="card-header bg-success text-white">
            <h2 class="h4 mb-0">Add New Skill</h2>
          </div>
          <div class="card-body">
            <div class="row g-3">
              <div class="col-md-4">
                <label for="techInput" class="form-label">Technology</label>
                <input type="text" class="form-control" id="techInput" placeholder="Ex: Node.js, MySQL, Docker...">
              </div>
              <div class="col-md-3">
                <label for="levelInput" class="form-label">Level</label>
                <select class="form-select" id="levelInput">
                  <option value="">Select level</option>
                  <option value="Beginner">Beginner</option>
                  <option value="Intermediate">Intermediate</option>
                  <option value="Advanced">Advanced</option>
                  <option value="Expert">Expert</option>
                </select>
              </div>
              <div class="col-md-3">
                <label for="experienceInput" class="form-label">Experience</label>
                <input type="text" class="form-control" id="experienceInput" placeholder="Ex: 2 years, 6 months...">
              </div>
              <div class="col-md-2 d-flex align-items-end">
                <button class="btn btn-success w-100" id="addSkillBtn">Add Skill</button>
              </div>
            </div>
            <div class="mt-3">
              <small class="text-muted">
                üí° <strong>Instructions:</strong> Fill all fields and click "Add Skill".<br>
                üñ±Ô∏è <strong>Interactivity:</strong> Click on a row to highlight it, double click to delete it.
              </small>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const techInput = document.getElementById('techInput');
    const levelInput = document.getElementById('levelInput');
    const experienceInput = document.getElementById('experienceInput');
    const addSkillBtn = document.getElementById('addSkillBtn');
    const skillsTableBody = document.querySelector('#skillsTable tbody');

    function getBadgeClass(level) {
        switch(level) {
            case 'Beginner': return 'badge bg-secondary';
            case 'Intermediate': return 'badge bg-warning text-dark';
            case 'Advanced': return 'badge bg-success';
            case 'Expert': return 'badge bg-info';
            case 'Native': return 'badge bg-primary';
            default: return 'badge bg-secondary';
        }
    }

    function addSkillRow() {
        const technology = techInput.value.trim();
        const level = levelInput.value;
        const experience = experienceInput.value.trim();
        
        if (technology === '') {
            alert('Please enter the technology name.');
            techInput.focus();
            return;
        }
        
        if (level === '') {
            alert('Please select a level.');
            levelInput.focus();
            return;
        }
        
        if (experience === '') {
            alert('Please enter the experience.');
            experienceInput.focus();
            return;
        }
        
        // Check for duplicates
        const existingRows = skillsTableBody.querySelectorAll('tr');
        for (let row of existingRows) {
            const existingTech = row.querySelector('td:first-child');
            if (existingTech && existingTech.textContent.toLowerCase() === technology.toLowerCase()) {
                alert('This technology is already in the list. You can edit it by double-clicking the row.');
                return;
            }
        }
        
        const newRow = document.createElement('tr');
        newRow.innerHTML = `
            <td>${technology}</td>
            <td><span class="${getBadgeClass(level)}">${level}</span></td>
            <td>${experience}</td>
        `;
        
        skillsTableBody.appendChild(newRow);
        
        // Clear form
        techInput.value = '';
        levelInput.value = '';
        experienceInput.value = '';
        
        // Add event listeners to new row
        addRowEventListeners(newRow);
        
        techInput.focus();
    }

    function addRowEventListeners(row) {
        row.addEventListener('click', function() {
            // Remove highlight from all rows
            const allRows = skillsTableBody.querySelectorAll('tr');
            allRows.forEach(r => r.classList.remove('table-active'));
            
            // Highlight clicked row
            this.classList.add('table-active');
        });
        
        row.addEventListener('dblclick', function() {
            if (confirm('Do you want to delete this skill?')) {
                this.remove();
            }
        });
    }

    // Add event listeners
    addSkillBtn.addEventListener('click', addSkillRow);
    
    // Enter key navigation
    techInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            levelInput.focus();
        }
    });
    
    levelInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            experienceInput.focus();
        }
    });
    
    experienceInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            addSkillRow();
        }
    });

    // Add event listeners to existing rows
    const existingRows = skillsTableBody.querySelectorAll('tr');
    existingRows.forEach(row => {
        addRowEventListeners(row);
    });

    techInput.focus();
});
</script>
